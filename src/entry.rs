use crate::{
    alternate_headwords::AlternateHeadwords,
    artwork::Artwork,
    cognate_cross_references::CognateCrossReferences,
    defined_run_ons::DefinedRunOns,
    directional_cross_reference_section::DirectionalCrossReferenceSection,
    etymology::Etymology,
    first_known_use::FirstKnownUse,
    headword_information::HeadwordInformation,
    homograph::Homograph,
    inflections::Inflections,
    labels::{FunctionalLabel, GeneralLabels},
    meta::EntryMetadata,
    quotation_section::QuotationSection,
    sense::definition_section::DefinitionSections,
    short_definitions::ShortDefinitions,
    synonym_section::SynonymSection,
    tables::Table,
    undefined_run_ons::UndefinedRunOns,
    usage_section::UsageSection,
    variants::Variants,
};

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Entry {
    meta: EntryMetadata,
    hwi: HeadwordInformation,
    hom: Option<Homograph>,
    ahws: Option<AlternateHeadwords>,
    vrs: Option<Variants>,
    fl: Option<FunctionalLabel>,
    lbs: Option<GeneralLabels>,
    ins: Option<Inflections>,
    cxs: Option<CognateCrossReferences>,
    def: Option<DefinitionSections>,
    uros: Option<UndefinedRunOns>,
    dros: Option<DefinedRunOns>,
    et: Option<Etymology>,
    dxnls: Option<DirectionalCrossReferenceSection>,
    usages: Option<UsageSection>,
    syns: Option<SynonymSection>,
    quotes: Option<QuotationSection>,
    art: Option<Artwork>,
    table: Option<Table>,
    date: Option<FirstKnownUse>,
    shortdef: Option<ShortDefinitions>,
}
